name: unittests

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-20.04
          - macos-13
          - windows-2019
        compiler:
          - llvm-15.0.2
          - gcc-13
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Release
          - Debug

        include:
          # Set up preferred package generators, for given build configurations
          - build_type: Release

          # These exist solely to make sure a non-multiconfig build works
          - os: ubuntu-20.04
            compiler: gcc-11
            generator: "Unix Makefiles"
            build_type: Debug
          - os: ubuntu-20.04
            compiler: gcc-11
            generator: "Unix Makefiles"
            build_type: Release

          # TODO: Add this back later
          # - os: windows-2022
          #   compiler: msvc
          #   generator: "Visual Studio 17 2022"
          #   build_type: Debug
          # - os: windows-2022
          #   compiler: msvc
          #   generator: "Visual Studio 17 2022"
          #   build_type: Release

    steps:
      - name: Check for llvm version mismatches
        if: ${{ contains(matrix.compiler, 'llvm') && !contains(matrix.compiler, env.CLANG_TIDY_VERSION) }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('There is a mismatch between configured llvm compiler and clang-tidy version chosen')

      - uses: actions/checkout@v3

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}

          cmake: true
          ninja: true
          cppcheck: true

      - name: Configure CMake
        run: |
          cmake -S . -B ./build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -DENABLE_CPPCHECK=ON

      - name: Build
        run: |
          # Reference: https://stackoverflow.com/a/67448797
          cmake --build build --config ${{matrix.build_type}}

      - name: Test
        run: |
          # Probably not needed to explicitly build the test. But it's probably fine
          cmake --build build --config ${{matrix.build_type}} --target test
